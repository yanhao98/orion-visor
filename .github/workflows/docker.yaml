name: Docker
on:
  push:
    branches:
      - feat-docker-multiarch
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Semantic version tags
permissions: # This is needed to push to GitHub Container Registry. See https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
  contents: read
  packages: write
concurrency: # This is needed to prevent concurrent builds from running at the same time
  group: ${{github.workflow}} - ${{github.ref}} - ${{github.ref_name}}
  cancel-in-progress: true
jobs:
  build-service:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@main
      - name: ☕ 配置Java环境
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: 🛠️ 配置Maven环境
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.9
      - name: 🏗️ Maven构建
        run: |
          mvn --batch-mode clean install -Dmaven.test.skip=true --threads=1C --settings=docker-multiarch/settings.xml
          #  -Dspring.profiles.active=prod
      - name: 🗄️ 缓存Docker层
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-service-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-service-
      - name: 🔑 登录 GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏷️ 准备 Docker 镜像元数据
        id: meta
        uses: docker/metadata-action@v5
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ghcr.io/${{ github.repository }}-service
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master', 'master-abc0123'
          # type=ref,event=tag generates tag(s) on tags only. E.g. 'v0.0.0', 'v0.0.0-abc0123', and 'latest'
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: 🖥️ 设置 QEMU
        uses: docker/setup-qemu-action@v3
      - name: 🐳 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🚀 构建并推送 Docker 镜像
        uses: docker/build-push-action@v6
        with:
          context: '.'
          push: true
          file: docker-multiarch/Dockerfile.service
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🔄 更新缓存
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  build-mysql:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@main
      - name: 🗄️ 缓存Docker层
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-mysql-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-mysql-
      - name: 🔑 登录 GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏷️ 准备 Docker 镜像元数据
        id: meta
        uses: docker/metadata-action@v5
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ghcr.io/${{ github.repository }}-mysql
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master', 'master-abc0123'
          # type=ref,event=tag generates tag(s) on tags only. E.g. 'v0.0.0', 'v0.0.0-abc0123', and 'latest'
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: 🖥️ 设置 QEMU
        uses: docker/setup-qemu-action@v3
      - name: 🐳 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🚀 构建并推送 Docker 镜像
        uses: docker/build-push-action@v6
        with:
          context: '.'
          push: true
          file: docker-multiarch/Dockerfile.mysql
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🔄 更新缓存
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@main
      - name: 📦 安装 PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: 🟢 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: 'orion-visor-ui/pnpm-lock.yaml'
      - name: 📥 安装依赖
        run: pnpm install --frozen-lockfile
        working-directory: orion-visor-ui
      - name: 🏗️ 构建UI
        run: pnpm build
        working-directory: orion-visor-ui
      - name: 🔑 登录 GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🏷️ 准备 Docker 镜像元数据
        id: meta
        uses: docker/metadata-action@v5
        env:
          # This env var ensures {{sha}} is a real commit SHA for type=ref,event=pr
          DOCKER_METADATA_PR_HEAD_SHA: 'true'
        with:
          images: |
            ghcr.io/${{ github.repository }}-ui
          # type=ref,event=branch generates tag(s) on branch only. E.g. 'master', 'master-abc0123'
          # type=ref,event=tag generates tag(s) on tags only. E.g. 'v0.0.0', 'v0.0.0-abc0123', and 'latest'
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: 🖥️ 设置 QEMU
        uses: docker/setup-qemu-action@v3
      - name: 🐳 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🚀 构建并推送 Docker 镜像
        uses: docker/build-push-action@v6
        with:
          context: '.'
          push: true
          file: docker-multiarch/Dockerfile.ui
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max